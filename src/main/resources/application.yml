server:
    port: 8080


spring:
  datasource:
    url: ${MYSQL_URL}
    username: ${MYSQL_USERNAME}
    password: ${MYSQL_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true

  data:
    mongodb:
      uri: ${MONGO_URL}chat-service

  jackson:
    time-zone: Asia/Seoul

  kafka:
    bootstrap-servers: ${KAFKA_SERVERS}
    producer:
      key-deserializer: org.apache.kafka.common.serialization.StringSerializer
      value-deserializer: org.apache.kafka.common.serialization.StringSerializer
      acks: ${KAFKA_ACKS}
      retries: ${KAFKA_RETRIES}
      batch-size: 16384
      linger-ms: 1
      buffer-memory: 33554432
      properties:
        request.timeout.ms: ${KAFKA_REQUEST_TIMEOUT_MS}
        delivery.timeout.ms: ${KAFKA_DELIVERY_TIMEOUT_MS}
        max.block.ms: ${KAFKA_MAX_BLOCK_MS}
    consumer:
      group-id: ${KAFKA_CONSUMER_GROUP_ID}
      auto-offset-reset: latest
      enable-auto-commit: false
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      max-poll-records: 2000
    listener:
      ack-mode: manual_immediate
      type: batch

cloud:
  aws:
    credentials:
      access-key: ${AWS_ACCESS_KEY_ID}
      secret-key: ${AWS_SECRET_ACCESS_KEY}
    region:
      static: ${AWS_REGION}
    s3:
      bucket: ${AWS_S3_BUCKET_NAME}

springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui
    config-url: /chat-service/v3/api-docs/swagger-config
    url: /chat-service/v3/api-docs